constants {
  test = "foo"
  default-request-timeout = 15
  coordinates-refresh-interval = 5
  coordinate-request-timeout = 15
  coordinates-error-threshold = 50.0
  transition-execution-mode = 1 # Can be 0 for "Sequential" or 1 for "Concurrent"
  message-overhead-measurement-interval = 90
  bandwidth-refresh-interval = 240
  event-interval-millis = 1000
  default-data-rate = 1 # Mbit/s Default data rate to use when there is no measurement yet
  data-rate-refresh-interval = 240
  simulation-time = 5
  gui-endpoint = "http://192.86.139.72:3000"
  global-initialization-timeout = 60000 // ms

  placement {
    physical-placement-nearest-neighbours = 1
    max-single-operator-iterations = 200
    relaxation-initial-iterations = 50
    update-interval = 60 # seconds after which node re-evaluates its own operators placement
    update { // enable or disable placement update functionality
      relaxation = false
      starks = false
    }
  }
}

akka {
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logger-startup-timeout = 30s
  jvm-exit-on-fatal-error = false

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"

  # Filter of log events that is usved by the LoggingAdapter before
  # publishing log events to the eventStream.
  # logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {

    provider = "cluster"
    timeout = 60000
    allow-java-serializer-usage = false // TODO disable java serialization to ensure kryo is always used
    warn-about-java-serializer-usage = true

    serialize-creators = off // always serialize Props
    serialize-messages = off // always serialize messages
  }

  cluster.min-nr-of-members = 4
}
